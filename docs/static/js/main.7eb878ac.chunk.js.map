{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","console","log","type","name","id","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAqBhD,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CC,QAAQC,IAAI,sBACZR,EAAc,MAKhB,SACE,uBACES,KAAK,OACLC,KAAK,GACLC,GAAG,GACHC,MAAOb,EACPc,SAvBoB,SAACX,GACzBF,EAAcE,EAAEY,OAAOF,OACvBL,QAAQC,IAAIN,EAAEY,OAAOF,a,+BCVZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIHI,MAAMF,GAJH,cAIfG,EAJe,gBAMEA,EAAIC,OANN,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLf,GAAIe,EAAIf,GACRgB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAXjB,kBAcdM,GAdc,4CAAH,sDCEPM,EAAc,SAAC,GAAuB,EAArBnB,GAAsB,IAAlBgB,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACvC,OACE,sBAAKa,UAAU,OAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAI,KACnB,4BAAIN,QCDGO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdlB,mBAAS,CACjCyB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KASxC,OAJAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEd,KAAMiB,EAAML,SAAS,SAChE,CAACnB,IAEGoB,EDNmBK,CAAazB,GAA/BO,EAD+B,EAC/BA,KAAMY,EADyB,EACzBA,QAEd,OACE,qCACE,6BAAKnB,IACL,sBAAKe,UAAU,YAAf,UACGI,GAAW,wCACXZ,EAAKE,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,cEejB+B,EAzBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,cADrB,mBAClBQ,EADkB,KACNT,EADM,KAWzB,OACE,qCACE,cAAC,EAAD,CAAaA,cAAeA,IAC5B,8CACA,uBACA,6BACGS,EAAWmB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MClBxB2B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7eb878ac.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropType from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  //para cambiar el valor del input y que siempre este\r\n  //actualizado con lo ultimo que escribio el usuario\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //cambiando el estado en la categoria padre\r\n    //como no tenemos las categories debemos hacerlo asi\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      console.log(\"formulario enviado\");\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\n//prototipos requeridos\r\nAddCategory.propTypes = {\r\n  setCategories: PropType.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=L3DqCq7gwr5pKz8EUtylkzYghV6j4Rxh`;\r\n  const res = await fetch(url);\r\n\r\n  const { data } = await res.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt=\"\" />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      <div className=\"card-grid\">\r\n        {loading && <p>Loading</p>}\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n        {/*images.map(({ id, title }) => (\r\n        <li key={id}>{title}</li>\r\n      ))*/}\r\n        {/**{images.map((img) => (\r\n        <li key={img.id}>{img.title}</li>\r\n      ))} */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => setstate({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"one punch\"]);\r\n  /*\r\n  const handleApp = () => {\r\n    /* let newCategories = categories;\r\n    newCategories.push(\"labanda\");\r\n    setCategories([...newCategories]);\r\n    //  setCategories(categories=>[...categories,'labanda']);\r\n    setCategories([\"labanda\", ...categories]);\r\n  };\r\n  */\r\n  return (\r\n    <>\r\n      <AddCategory setCategories={setCategories} />\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}